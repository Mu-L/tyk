name: Persistent Environment Creation
on:
  workflow_call:
    inputs:
      containerName:
        required: true
        type: string
      cluster:
        required: true
        type: string
      terraformDir:
        required: false
        type: string
        default: "./ci/terraform/environment"
    secrets:
      aws_key:
        required: true
      aws_secret:
        required: true
      tf_token:
        required: true
      etcd_pass:
        required: true
      docker_user:
        required: true
      docker_pass:
        required: true                


env:
  TERRAFORM_DIR: ${{ inputs.terraformDir }}
  CONTAINER_NAME: ${{ inputs.containerName }}
  CLUSTER: ${{ inputs.cluster }}

jobs:
  Create:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.tf_token }}
          terraform_wrapper: false

      - name: Inspect dir
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: ls -la ${{ github.workspace }}


      # - name: Terraform Format
      #   working-directory: ${{ env.TERRAFORM_DIR }}
      #   id: fmt
      #   run: terraform fmt -check

      # - name: Configure AWS credentials for use
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.aws_key }}
      #     aws-secret-access-key: ${{ secrets.aws_secret }}
      #     aws-region: "eu-central-1"

      # - name: Login to DockerHub
      #   # if: startsWith(github.ref, 'refs/tags')
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.docker_user }}
      #     password: ${{ secrets.docker_pass }}

      # - uses: TykTechnologies/docker-run-action@main
      #   env:
      #     ETCD_PASS: ${{ secrets.etcd_pass }}
      #   with:
      #     registry: docker.io
      #     image: tykio/gromit:v1.4.5-rc2
      #     options: -v ${{ github.workspace }}:/repo -v ${{ github.workspace }}/.terraform.d:/root/.terraform.d
      #     run: gromit mutex get master --script /repo/ci/devenv/create_env.sh -l debug